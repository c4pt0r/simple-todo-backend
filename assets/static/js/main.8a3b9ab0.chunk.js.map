{"version":3,"sources":["api.ts","components/Header.tsx","components/Footer.tsx","components/TodoItem.tsx","useTodos.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["StatusFilter","request","options","a","axios","response","res","data","c","toast","warning","error","getTodos","params","url","method","d","postTodo","success","patchTodo","defaults","headers","post","Header","onCreate","inputRef","useRef","handleInputKeyDown","useCallback","event","key","preventDefault","inputEl","current","value","trim","className","ref","placeholder","autoFocus","onKeyDown","Footer","href","TodoItem","todo","onRemove","onUpdate","onToggle","useState","isEditing","setIsEditing","title","editingTitle","setEditingTitle","handleRemove","id","clientID","handleEdit","handleSubmit","editingStr","handleChange","target","handleKeyDown","handleStatusChange","completed","type","checked","onChange","disabled","onBlur","onDoubleClick","onClick","autoClientID","findTodoById","todos","index","findIndex","t","useTodos","setTodos","All","statusFilter","setStatusFilter","isLoadingData","setIsLoadingData","fetchTodos","limit","useEffect","onStatusFilterChange","val","thisClientId","todoEnity","todoItemIndex","newTodos","deletedTodo","splice","delTodo","newCompleted","App","statusFilterOptions","text","UNCOMPLETED","COMPLETED","length","map","sfo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8a3b9ab0.chunk.js","sourcesContent":["import axios, { AxiosRequestConfig } from 'axios'\nimport { toast } from 'react-toastify'\nimport { mockUncompletedTasks, mockCompletedTasks } from './mockData'\n\naxios.defaults.headers.post['Content-Type'] = 'application/json';\n\nexport enum StatusFilter {\n  All = 1,\n  UNCOMPLETED = 2,\n  COMPLETED = 3,\n}\n\nexport async function request(options: AxiosRequestConfig) {\n  try {\n    const response = await axios(options);\n    const res = response.data;\n\n    if (res.c !== 0) {\n      toast.warning('Something wrong with the BUSINESS');\n    }\n\n    return res;\n  } catch (err) {\n    toast.error('Something wrong with the NETWORK');\n    throw err\n  }\n}\n\ninterface GetTodosParams {\n  limit?: string | number\n  statusFilter?: StatusFilter\n}\nexport async function getTodos(params: GetTodosParams) {\n  /** mock start \n  if (params.statusFilter === StatusFilter.All) {\n    return [...mockUncompletedTasks, ...mockCompletedTasks]\n  } else if (params.statusFilter === StatusFilter.UNCOMPLETED) {\n    return [...mockUncompletedTasks]\n  } else if (params.statusFilter === StatusFilter.COMPLETED) {\n    return [...mockCompletedTasks]\n  }\n  */\n  /** mock end */\n\n  // TODO: uncomment these lines to use the real data from the api\n  const { d } = await request({\n    url: '/api/todos',\n    method: 'GET',\n    params,\n  })\n  return d;\n}\n\ninterface PostTodoData {\n  title: string\n}\nexport async function postTodo(data: PostTodoData) {\n  const { c, d } = await request({\n    url: '/api/todo',\n    method: 'POST',\n    data,\n  })\n  c === 0 && toast.success('ğŸŒŸ Created!')\n  return d;\n}\n\ninterface DelTodoData {\n  id: string\n}\nexport async function delTodo(data: DelTodoData) {\n  const { c } = await request({\n    url: '/api/todo',\n    method: 'DELETE',\n    data,\n  })\n  c === 0 && toast.success('ğŸŒŸ Deleted!')\n}\n\ninterface PatchTodoData {\n  id: string\n  title?: string\n  completed?: boolean\n}\nexport async function patchTodo(data: PatchTodoData) {\n  const { c, d } = await request({\n    url: '/api/todo',\n    method: 'PATCH',\n    data,\n  })\n  c === 0 && toast.success('ğŸŒŸ Updated!')\n  return d;\n}\n","import React, { FC, useCallback, useRef } from 'react'\n\ninterface IHeaderProps {\n  onCreate: (title: string) => void;\n}\n\nexport const Header: FC<IHeaderProps> = ({ onCreate }) => {\n  const inputRef = useRef<HTMLInputElement>(null)\n  const handleInputKeyDown = useCallback((event: React.KeyboardEvent) => {\n    if (event.key !== 'Enter') {\n      return\n    }\n    event.preventDefault()\n\n    const inputEl = inputRef.current\n    if (inputEl && inputEl.value.trim()) {\n      onCreate(inputEl.value.trim())\n      inputEl.value = ''\n    }\n  }, [onCreate])\n\n  return (\n    <header className=\"header\">\n      <h1>todos</h1>\n      <input\n        ref={inputRef}\n        className=\"new-todo\"\n        placeholder=\"What needs to be done?\"\n        autoFocus={true}\n        onKeyDown={handleInputKeyDown}\n      />\n    </header>\n  )\n}\n","import React from 'react'\n\nexport const Footer = () => {\n  return (\n    <footer className=\"footer\">\n      <p>Double-click to edit a todo</p>\n      <p>\n        Refer to <a href=\"http://todomvc.com\">TodoMVC</a>\n      </p>\n    </footer>\n  )\n}\n","import React, { FC, useCallback, useState } from 'react'\n\nimport { Todo, TodoIDs } from '../useTodos'\n\nexport interface ITodoItemProps {\n  todo: Todo\n  onRemove: (target: TodoIDs) => void\n  onToggle: (target: TodoIDs) => void\n  onUpdate: (target: TodoIDs & { title: string }) => void\n}\n\nexport const TodoItem: FC<ITodoItemProps> = ({ todo, onRemove, onUpdate, onToggle }) => {\n  const [isEditing, setIsEditing] = useState(false)\n  const [editingTitle, setEditingTitle] = useState(todo.title)\n\n  const handleRemove = useCallback(() => {\n    onRemove({ id: todo.id, clientID: todo.clientID || 0 })\n  }, [todo, onRemove])\n\n  const handleEdit = useCallback(() => {\n    setIsEditing(true)\n    setEditingTitle(todo.title)\n  }, [todo])\n\n  const handleSubmit = useCallback(() => {\n    const editingStr = editingTitle.trim()\n    if (editingStr) {\n      onUpdate({ id: todo.id, clientID: todo.clientID || 0, title: editingStr })\n      setIsEditing(false)\n    } else {\n      onRemove({ id: todo.id, clientID: todo.clientID || 0 })\n    }\n  }, [editingTitle, onUpdate, todo, onRemove])\n\n  const handleChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target) {\n      setEditingTitle(event.target.value || '')\n    }\n  }, [])\n\n  const handleKeyDown = useCallback(\n    (event: React.KeyboardEvent<HTMLInputElement>) => {\n      if (event.key === 'Escape') {\n        setEditingTitle(todo.title)\n        setIsEditing(false)\n      } else if (event.key === 'Enter') {\n        handleSubmit()\n      }\n    },\n    [todo, handleSubmit]\n  )\n\n  const handleStatusChange = useCallback(() => {\n    onToggle({ id: todo.id, clientID: todo.clientID || 0 })\n  }, [todo, onToggle])\n\n  return (\n    <div className={`todo-item ${todo.completed ? 'todo-item__completed' : ''}`}>\n      <div className=\"todo-item--toggle\">\n        <input\n          className=\"todo-item--toggle-input\"\n          type=\"checkbox\"\n          checked={todo.completed}\n          onChange={handleStatusChange}\n          disabled={isEditing}\n        />\n      </div>\n      {isEditing ? (\n        <input\n          type=\"text\"\n          className=\"todo-item--editing-input\"\n          value={editingTitle}\n          onBlur={handleSubmit}\n          onChange={handleChange}\n          onKeyDown={handleKeyDown}\n          autoFocus\n        />\n      ) : (\n        <div className=\"todo-item--content\" onDoubleClick={handleEdit}>\n          {todo.title}\n        </div>\n      )}\n      <button\n        className=\"todo-item--remove\"\n        title=\"Click to remove\"\n        onClick={handleRemove}\n        disabled={isEditing}\n      />\n    </div>\n  )\n}\n","import { useState, useCallback, useEffect } from 'react'\nimport { StatusFilter, getTodos, delTodo, patchTodo, postTodo } from './api'\n\n\nlet autoClientID = 1;\n\nexport interface Todo {\n  id: string\n  title: string\n  completed: boolean\n  clientID?: number\n}\n\nexport interface TodoIDs {\n  id: string\n  clientID?: number\n}\n\nfunction findTodoById(target: TodoIDs, todos: Todo[]) {\n  let index = -1\n  if (target.id) {\n    index = todos.findIndex(t => t.id === target.id)\n  } else if (target.clientID) {\n    index = todos.findIndex(t => t.clientID === target.clientID)\n  }\n  return index\n}\n\nfunction useTodos() {\n  const [todos, setTodos] = useState<Todo[]>([])\n  const [statusFilter, setStatusFilter] = useState(StatusFilter.All)\n  const [isLoadingData, setIsLoadingData] = useState(true)\n\n  const fetchTodos = useCallback(async (statusFilter = StatusFilter.All, limit = 100) => {\n    setIsLoadingData(true)\n    try {\n      const data = await getTodos({ limit, statusFilter })\n      setTodos(data || [])\n    } finally {\n      setIsLoadingData(false)\n    }\n  }, [])\n\n  useEffect(() => {\n    fetchTodos(statusFilter)\n  }, []) // eslint-disable-line\n\n  const onStatusFilterChange = useCallback((val: StatusFilter) => {\n    if (statusFilter !== val) {\n      setStatusFilter(val)\n      fetchTodos(val)\n    }\n  }, [statusFilter, fetchTodos])\n\n  const onCreate = useCallback(async (title: string) => {\n    const thisClientId = ++autoClientID\n    setTodos([\n      {\n        id: '',\n        title,\n        completed: false,\n        clientID: thisClientId,\n      },\n      ...todos,\n    ])\n    const todoEnity = await postTodo({ title })\n    if (todoEnity) {\n      const { id } = todoEnity as Todo\n      const todoItemIndex = todos.findIndex(t => t.clientID === thisClientId)\n      if (todoItemIndex >= 0) {\n        const newTodos = [...todos]\n        newTodos[todoItemIndex].id = id\n        setTodos(newTodos)\n      }\n    }\n    // TODO: if error, remove the task\n  }, [todos]);\n\n  const onRemove = useCallback((target: TodoIDs) => {\n    const index = findTodoById(target, todos)\n\n    if (index >= 0) {\n      const newTodos = [...todos]\n      const deletedTodo = newTodos.splice(index, 1)\n\n      setTodos(newTodos)\n\n      if (deletedTodo[0] && deletedTodo[0].id) {\n        delTodo({ id: deletedTodo[0].id })\n        // TODO: if error, recover the task\n      }\n    }\n  }, [todos])\n\n  const onUpdate = useCallback(async (target: TodoIDs & { title: string }) => {\n    const index = findTodoById(target, todos)\n    if (index >= 0) {\n      const newTodos = [...todos]\n      newTodos[index].title = target.title\n\n      setTodos(newTodos)\n\n      if (newTodos[index].id) {\n        patchTodo({ id: newTodos[index].id, title: target.title })\n        // TODO: if error, recover the task title\n      }\n    }\n  }, [todos])\n\n  const onToggle = useCallback((target: TodoIDs) => {\n    const index = findTodoById(target, todos)\n    if (index >= 0) {\n      const newTodos = [...todos]\n      const newCompleted = !newTodos[index].completed\n      newTodos[index].completed = newCompleted\n\n      setTodos(newTodos)\n\n      if (newTodos[index].id) {\n        patchTodo({ id: newTodos[index].id, completed: newCompleted })\n        // TODO: if error, recover the task status\n      }\n    }\n  }, [todos])\n\n  return {\n    todos,\n    onCreate,\n    onRemove,\n    onUpdate,\n    onToggle,\n    onStatusFilterChange,\n    isLoadingData,\n    statusFilter,\n  }\n}\n\nexport default useTodos\n","import 'react-toastify/dist/ReactToastify.css'\nimport './App.css'\n\nimport React from 'react'\nimport { ToastContainer } from 'react-toastify'\n\nimport { StatusFilter } from './api'\nimport { Footer, Header, TodoItem } from './components'\nimport useTodos from './useTodos'\n\nfunction App() {\n  const {\n    todos,\n    onCreate,\n    onRemove,\n    onUpdate,\n    onToggle,\n    statusFilter,\n    onStatusFilterChange,\n    isLoadingData,\n  } = useTodos()\n  const statusFilterOptions = [\n    {\n      value: StatusFilter.All,\n      text: 'All',\n    },\n    {\n      value: StatusFilter.UNCOMPLETED,\n      text: 'Uncompleted',\n    },\n    {\n      value: StatusFilter.COMPLETED,\n      text: 'Completed',\n    },\n  ]\n\n  return (\n    <div className={`todo-app ${isLoadingData ? 'todo-app-loading' : ''}`}>\n      <Header onCreate={onCreate} />\n      <div className=\"todo-count-filter\">\n        <div className=\"todo-count\">\n          {todos.length === 0 ? 'None' : `${todos.length} items left`}\n        </div>\n        <div className=\"todo-filter\">\n          {statusFilterOptions.map((sfo) => (\n            <div\n              key={sfo.value}\n              className={`todo-filter-item ${\n                sfo.value === statusFilter ? 'todo-filter-item__actived' : ''\n              }`}\n              onClick={() => onStatusFilterChange(sfo.value)}\n            >\n              {sfo.text}\n            </div>\n          ))}\n        </div>\n      </div>\n      <div className=\"todo-main\">\n        <div className=\"todo-list\">\n          {todos.map((t) => (\n            <TodoItem\n              key={t.id || t.clientID}\n              todo={t}\n              onRemove={onRemove}\n              onUpdate={onUpdate}\n              onToggle={onToggle}\n            />\n          ))}\n        </div>\n      </div>\n      <Footer />\n      <ToastContainer />\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}